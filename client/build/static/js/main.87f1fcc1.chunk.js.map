{"version":3,"sources":["logo.svg","Pages/ArtisPage/index.js","Pages/ArtisPageDetail/index.js","Pages/AdmobPage/index.js","Pages/AlbumPageDetail/index.js","Pages/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","columns","title","dataIndex","key","render","text","RegistrationForm","state","data","getData","axios","get","then","res","setState","catch","err","swal","console","log","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","values","post","name","this","getFieldDecorator","newData","map","item","index","album","length","lagu","music","style","textAlign","marginBottom","labelCol","xs","span","sm","wrapperCol","onSubmit","Item","label","placeholder","offset","type","htmlType","bordered","dataSource","React","Component","WrappedRegistrationForm","create","MusicPage","Panel","callback","TextArea","Meta","ArtisPageDetail","ModalText","visible","confirmLoading","albumName","albumImage","audioUrl","lyric","SubmitLaguBaru","_id","getDataArtis","showModal","handleOk","alert","setTimeout","handleCancel","id","match","params","dataTable","undefined","judul","link","lirik","paddingTop","paddingBottom","paddingLeft","paddingRight","color","defaultActiveKey","onChange","header","allowClear","value","even","target","onClick","className","image","imageStyle","height","description","gutter","md","lg","history","push","hoverable","width","cover","alt","src","albumSong","onOk","onCancel","event","marginTop","confirmDirty","edit","admobID","put","admobAplikasi","admobBanner","admobIDIntersial","admobIDReward","AdmobPage","AlbumPageDetail","dataAlbum","dataMusik","addSong","idSong","getDataAlbum","albumId","getDataArtist","artistId","_album","addMusikToAlbum","background","padding","fontSize","fontWeight","Header","Content","Footer","Sider","SubMenu","HomePage","collapsed","onCollapse","Axios","useHistory","minHeight","collapsible","theme","defaultSelectedKeys","mode","to","marginLeft","margin","path","exact","component","ArtisPage","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87f1fcc1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component, Fragment } from 'react';\r\nimport { Table, Form, Input, Button } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\nimport axios from 'axios';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Artis Name',\r\n        dataIndex: 'title',\r\n        key: 'title',\r\n        render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n        title: 'Jumlah Album',\r\n        dataIndex: 'album',\r\n        key: 'album',\r\n    },\r\n    {\r\n        title: 'Jumlah Lagu',\r\n        dataIndex: 'lagu',\r\n        key: 'lagu',\r\n    },\r\n];\r\n\r\nclass RegistrationForm extends React.Component {\r\n    state = {\r\n        data: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        axios\r\n            .get('/api/artist')\r\n            .then(res => {\r\n                // console.log('admob data', res.data);\r\n\r\n                this.setState({\r\n                    data: res.data,\r\n                });\r\n            })\r\n            .catch(err => {\r\n                swal('Sorry!', 'error Load Data', 'error');\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        const { data } = this.state;\r\n        // console.log('id', data._id);\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                axios\r\n                    .post(`/api/artist/`, values)\r\n                    .then(res => {\r\n                        this.getData();\r\n                        swal(\r\n                            'Good job!',\r\n                            `Artis ${res.data.name} telah ditambahkan!`,\r\n                            'success',\r\n                        );\r\n                        console.log('respon', res);\r\n                    })\r\n                    .catch(err => {\r\n                        console.log('error update', err);\r\n                    });\r\n                console.log('values: ', values);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        const { data } = this.state;\r\n        console.log('ini data baru', data);\r\n        const newData = data.map((item, index) => {\r\n            return {\r\n                key: index,\r\n                title: item.name,\r\n                album: item.album.length,\r\n                lagu: item.music.length,\r\n            };\r\n        });\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                    offset: 8,\r\n                },\r\n            },\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <h1 style={{ textAlign: 'center', marginBottom: 20 }}>\r\n                    Artis Page\r\n                </h1>\r\n                <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                    <Form.Item label=\"Artis Name\">\r\n                        {getFieldDecorator('name')(\r\n                            <Input placeholder=\" Add New Artis\" />,\r\n                        )}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailFormItemLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Add New Artis\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                <Table bordered={true} columns={columns} dataSource={newData} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(\r\n    RegistrationForm,\r\n);\r\n\r\nexport class MusicPage extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <WrappedRegistrationForm />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MusicPage;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Row, Col } from 'antd';\r\nimport './ArtisPageDetail.css';\r\nimport {\r\n    Card,\r\n    Modal,\r\n    Form,\r\n    Select,\r\n    Input,\r\n    Button,\r\n    Table,\r\n    InputNumber,\r\n    Popconfirm,\r\n    Divider,\r\n    Tag,\r\n    Collapse,\r\n    Empty,\r\n} from 'antd';\r\nimport swal from 'sweetalert';\r\n\r\nconst { Panel } = Collapse;\r\nfunction callback(key) {\r\n    console.log(key);\r\n}\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nconst { TextArea } = Input;\r\nconst { Meta } = Card;\r\nconst columns = [\r\n    {\r\n        title: 'Judul Lagu',\r\n        dataIndex: 'judul',\r\n        key: 'judul',\r\n        render: text => <a>{text}</a>,\r\n    },\r\n    {\r\n        title: 'Link Lagu',\r\n        dataIndex: 'link',\r\n        key: 'link',\r\n    },\r\n    {\r\n        title: 'Lirik Lagu',\r\n        dataIndex: 'lirik',\r\n        key: 'lirik',\r\n    },\r\n];\r\n\r\n// ini table batas atas\r\n\r\n// ini table batas bawah\r\n\r\nexport class ArtisPageDetail extends Component {\r\n    state = {\r\n        data: [],\r\n        ModalText: 'Content of the modal',\r\n        visible: false,\r\n        confirmLoading: false,\r\n        albumName: '',\r\n        albumImage: '',\r\n        title: '',\r\n        audioUrl: '',\r\n        lyric: '',\r\n    };\r\n\r\n    SubmitLaguBaru = () => {\r\n        const { data, title, audioUrl, lyric } = this.state;\r\n        axios\r\n            .post(`/api/music/${data._id}`, {\r\n                title,\r\n                audioUrl,\r\n                lyric,\r\n            })\r\n            .then(res => {\r\n                this.setState({\r\n                    title: '',\r\n                    audioUrl: '',\r\n                    lyric: '',\r\n                });\r\n                swal(\r\n                    'Good job!',\r\n                    `Lagu untuk ${res.data.name} telah ditambahkan!`,\r\n                    'success',\r\n                );\r\n                console.log('inininininin', res);\r\n                this.getDataArtis();\r\n            })\r\n            .catch(err =>\r\n                swal(\r\n                    'something Wrong!',\r\n                    `error menambah kan lagu!, silahkan coba lagi`,\r\n                    'error',\r\n                ),\r\n            );\r\n\r\n        this.setState({\r\n            ModalText: 'The modal will be closed after two seconds',\r\n            confirmLoading: true,\r\n        });\r\n    };\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = () => {\r\n        const { data, albumImage, albumName } = this.state;\r\n        axios\r\n            .post(`/api/album/${data._id}`, {\r\n                albumImage,\r\n                albumName,\r\n            })\r\n            .then(res => {\r\n                this.getDataArtis();\r\n                swal('Good job!', `berhasil menambahkan Album baru`, 'success');\r\n            })\r\n            .catch(err => alert('respon error: ', err));\r\n\r\n        this.setState({\r\n            ModalText: 'The modal will be closed after two seconds',\r\n            confirmLoading: true,\r\n        });\r\n        setTimeout(() => {\r\n            this.setState({\r\n                visible: false,\r\n                confirmLoading: false,\r\n            });\r\n        }, 2000);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getDataArtis();\r\n    }\r\n\r\n    getDataArtis = () => {\r\n        const id = this.props.match.params._id;\r\n        console.log('ini id terbaru', id);\r\n        axios\r\n            .get(`/api/artist/${id}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res.data,\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n    render() {\r\n        const {\r\n            visible,\r\n            confirmLoading,\r\n            ModalText,\r\n            data,\r\n            title,\r\n            audioUrl,\r\n            lyric,\r\n        } = this.state;\r\n        console.log('ggagagga', data.music);\r\n\r\n        const dataTable =\r\n            data.music !== undefined &&\r\n            data.music.map((item, index) => {\r\n                return {\r\n                    key: index,\r\n                    judul: item.title,\r\n                    link: item.audioUrl !== '' ? 'true' : 'url kosong',\r\n                    lirik: item.lyric !== '' ? 'true' : 'tidak ada lirik',\r\n                };\r\n            });\r\n\r\n        return (\r\n            <div>\r\n                <Tag\r\n                    style={{\r\n                        paddingTop: 10,\r\n                        paddingBottom: 10,\r\n                        paddingLeft: 15,\r\n                        paddingRight: 15,\r\n                    }}\r\n                    color=\"#87d068\"\r\n                >\r\n                    Detail Page for {data.name}\r\n                </Tag>\r\n\r\n                <br />\r\n                <br />\r\n                <Collapse defaultActiveKey={['1']} onChange={callback}>\r\n                    <Panel header=\"Tambahkan Lagu Baru\" key=\"1\">\r\n                        <div>\r\n                            <Form>\r\n                                <Input\r\n                                    placeholder=\"Judul Lagu\"\r\n                                    allowClear\r\n                                    value={title}\r\n                                    onChange={even =>\r\n                                        this.setState({\r\n                                            title: even.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                <Input\r\n                                    placeholder=\"Url Lagu\"\r\n                                    allowClear\r\n                                    value={audioUrl}\r\n                                    onChange={even =>\r\n                                        this.setState({\r\n                                            audioUrl: even.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                <TextArea\r\n                                    placeholder=\"Lyric Lagu\"\r\n                                    allowClear\r\n                                    value={lyric}\r\n                                    onChange={even =>\r\n                                        this.setState({\r\n                                            lyric: even.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                <Button\r\n                                    onClick={this.SubmitLaguBaru}\r\n                                    type=\"primary\"\r\n                                >\r\n                                    Tambahkan\r\n                                </Button>\r\n                            </Form>\r\n                        </div>\r\n                    </Panel>\r\n                    <Panel header=\"List Lagu\" key=\"2\">\r\n                        <Table\r\n                            bordered={true}\r\n                            columns={columns}\r\n                            dataSource={dataTable}\r\n                        />\r\n                    </Panel>\r\n                    <Panel header=\"List Album\" key=\"3\">\r\n                        <div className=\"gutter-example\">\r\n                            {data.album !== undefined &&\r\n                            data.album.length < 0 ? (\r\n                                <Empty\r\n                                    image=\"https://gw.alipayobjects.com/mdn/miniapp_social/afts/img/A*pevERLJC9v0AAAAAAAAAAABjAQAAAQ/original\"\r\n                                    imageStyle={{\r\n                                        height: 60,\r\n                                    }}\r\n                                    description={\r\n                                        <span>Album Masih Kosong</span>\r\n                                    }\r\n                                >\r\n                                    <Button\r\n                                        onClick={this.showModal}\r\n                                        type=\"primary\"\r\n                                    >\r\n                                        Buat Album Pertama\r\n                                    </Button>\r\n                                </Empty>\r\n                            ) : (\r\n                                <Row\r\n                                    gutter={[\r\n                                        { xs: 8, sm: 16, md: 24, lg: 32 },\r\n                                        20,\r\n                                    ]}\r\n                                >\r\n                                    {data.album !== undefined &&\r\n                                        data.album.map((item, index) => {\r\n                                            return (\r\n                                                <Col\r\n                                                    key={index}\r\n                                                    className=\"gutter-row\"\r\n                                                    span={6}\r\n                                                    onClick={() => {\r\n                                                        this.props.history.push(\r\n                                                            `/album_detail/${item._id}/${data._id}`,\r\n                                                        );\r\n                                                        // alert(\r\n                                                        //     'album id',\r\n                                                        //     item._id,\r\n                                                        // );\r\n                                                    }}\r\n                                                >\r\n                                                    <Card\r\n                                                        hoverable\r\n                                                        style={{ width: 240 }}\r\n                                                        cover={\r\n                                                            <img\r\n                                                                alt=\"example\"\r\n                                                                src={\r\n                                                                    item.albumImage\r\n                                                                }\r\n                                                            />\r\n                                                        }\r\n                                                    >\r\n                                                        <Meta\r\n                                                            title={\r\n                                                                item.albumName\r\n                                                            }\r\n                                                            description={`${item.albumSong.length} of songs`}\r\n                                                        />\r\n                                                    </Card>\r\n                                                </Col>\r\n                                            );\r\n                                        })}\r\n                                    <Col className=\"gutter-row\" span={6}>\r\n                                        <Card\r\n                                            onClick={this.showModal}\r\n                                            hoverable\r\n                                            style={{ width: 240 }}\r\n                                            cover={\r\n                                                <img\r\n                                                    alt=\"example\"\r\n                                                    src=\"https://static.thenounproject.com/png/396915-200.png\"\r\n                                                />\r\n                                            }\r\n                                        >\r\n                                            <Meta\r\n                                                title=\"add new Album\"\r\n                                                description=\"o of songs\"\r\n                                            />\r\n                                        </Card>\r\n                                    </Col>\r\n                                </Row>\r\n                            )}\r\n\r\n                            <div>\r\n                                <Modal\r\n                                    title=\"Add Album\"\r\n                                    visible={visible}\r\n                                    onOk={this.handleOk}\r\n                                    confirmLoading={confirmLoading}\r\n                                    onCancel={this.handleCancel}\r\n                                >\r\n                                    <Input\r\n                                        placeholder=\"Album Name\"\r\n                                        value={this.state.albumName}\r\n                                        onChange={event =>\r\n                                            this.setState({\r\n                                                albumName: event.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n\r\n                                    <Input\r\n                                        style={{ marginTop: 20 }}\r\n                                        placeholder=\"Album Image\"\r\n                                        value={this.state.albumImage}\r\n                                        onChange={event =>\r\n                                            this.setState({\r\n                                                albumImage: event.target.value,\r\n                                            })\r\n                                        }\r\n                                    />\r\n                                </Modal>\r\n                            </div>\r\n                        </div>\r\n                    </Panel>\r\n                </Collapse>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ArtisPageDetail;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport axios from 'axios';\r\n\r\nclass RegistrationForm extends React.Component {\r\n    state = {\r\n        confirmDirty: false,\r\n\r\n        edit: true,\r\n        data: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        axios\r\n            .get('/api/admob')\r\n            .then(res => {\r\n                console.log('admob data', res.data[0].admobID);\r\n                this.setState({\r\n                    data: res.data[0],\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        const { data } = this.state;\r\n        console.log('id', data._id);\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                axios\r\n                    .put(`/api/admob/update/${data._id}`, values)\r\n                    .then(res => {\r\n                        console.log('succes', res);\r\n                        this.getData();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log('error update', err);\r\n                    });\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        // console.log('ini data baru', this.state.data);\r\n        const { data } = this.state;\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                    offset: 8,\r\n                },\r\n            },\r\n        };\r\n\r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <h1 style={{ textAlign: 'center', marginBottom: 20 }}>\r\n                        Admob Page\r\n                    </h1>\r\n                    <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                        <Form.Item label=\"Admob Id\">\r\n                            {getFieldDecorator('admobID')(\r\n                                <Input placeholder={data.admobID} />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Admob Aplikasi\">\r\n                            {getFieldDecorator('admobAplikasi')(\r\n                                <Input placeholder={data.admobAplikasi} />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Admob Banner\">\r\n                            {getFieldDecorator('admobBanner')(\r\n                                <Input placeholder={data.admobBanner} />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Admob Intertial\">\r\n                            {getFieldDecorator('admobIDIntersial')(\r\n                                <Input placeholder={data.admobIDIntersial} />,\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Admob Reward\">\r\n                            {getFieldDecorator('admobIDReward')(\r\n                                <Input placeholder={data.admobIDReward} />,\r\n                            )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailFormItemLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Update\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(\r\n    RegistrationForm,\r\n);\r\n\r\nexport class AdmobPage extends Component {\r\n    render() {\r\n        return <WrappedRegistrationForm />;\r\n    }\r\n}\r\n\r\nexport default AdmobPage;\r\n","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport { Input, Button, Empty, Tag } from 'antd';\r\nimport swal from 'sweetalert';\r\n\r\nexport class AlbumPageDetail extends Component {\r\n    state = {\r\n        dataAlbum: [],\r\n        dataMusik: [],\r\n        addSong: '',\r\n        idSong: '',\r\n    };\r\n    componentDidMount() {\r\n        this.getDataArtist();\r\n        this.getDataAlbum();\r\n    }\r\n\r\n    getDataAlbum = () => {\r\n        const albumId = this.props.match.params._id;\r\n        axios\r\n            .get(`/api/album/${albumId}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    dataAlbum: res.data,\r\n                });\r\n                console.log('ini album', res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    getDataArtist = () => {\r\n        const artistId = this.props.match.params._album;\r\n        axios\r\n            .get(`/api/artist/${artistId}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    dataMusik: res.data.music,\r\n                });\r\n                console.log('ini artist', res.data.music);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    addMusikToAlbum = () => {\r\n        const { idSong } = this.state;\r\n        const albumId = this.props.match.params._id;\r\n        // alert('ini id musik' + idSong + 'dan ini id album' + albumId);\r\n        axios\r\n            .post(\r\n                `/api/album/assign/music/${albumId}/${idSong}`,\r\n            )\r\n            .then(res => {\r\n                swal('Good job!', `berhasil menambahkan lagu`, 'success');\r\n                this.getDataAlbum();\r\n                this.setState({ idSong: '', addSong: '' });\r\n            })\r\n            .catch(err => {\r\n                swal('error!', `gagal menambahkan lagu`, 'error');\r\n                console.log('ini error menambahkan lagu', err);\r\n            });\r\n    };\r\n    render() {\r\n        const { dataAlbum, dataMusik } = this.state;\r\n        console.log('album song', dataAlbum.albumSong);\r\n        console.log('musik', dataMusik);\r\n        // console.log('apa propsnya id artis', this.props.match.params._id);\r\n        return (\r\n            <Fragment>\r\n                <Tag\r\n                    style={{\r\n                        paddingTop: 5,\r\n                        paddingBottom: 5,\r\n                        paddingLeft: 25,\r\n                        paddingRight: 25,\r\n                        marginBottom: 10,\r\n                    }}\r\n                    color=\"magenta\"\r\n                >\r\n                    album Page Detail\r\n                </Tag>\r\n\r\n                <br />\r\n                <p>\r\n                    Nama Album :{' '}\r\n                    {dataAlbum.albumName !== undefined && dataAlbum.albumName}\r\n                </p>\r\n                <p>\r\n                    Jumlah Lagu :{' '}\r\n                    {dataAlbum.albumSong !== undefined &&\r\n                        dataAlbum.albumSong.length}{' '}\r\n                    of song\r\n                </p>\r\n\r\n                <Tag\r\n                    style={{\r\n                        paddingTop: 5,\r\n                        paddingBottom: 5,\r\n                        paddingLeft: 25,\r\n                        paddingRight: 25,\r\n                        marginBottom: 10,\r\n                        marginTop: 40,\r\n                    }}\r\n                    color=\"magenta\"\r\n                >\r\n                    tambahkan Lagu :\r\n                </Tag>\r\n\r\n                <Input\r\n                    style={{ marginBottom: 20 }}\r\n                    placeholder=\"Tambahkan Lagu\"\r\n                    value={this.state.addSong}\r\n                    // onChange={event =>\r\n                    //     this.setState({\r\n                    //         albumImage: event.target.value,\r\n                    //     })\r\n                    // }\r\n                />\r\n                <Button\r\n                    style={{ marginBottom: 20 }}\r\n                    type=\"primary\"\r\n                    onClick={this.addMusikToAlbum}\r\n                >\r\n                    Submit\r\n                </Button>\r\n                <div\r\n                    style={{\r\n                        background: 'grey',\r\n                        padding: 5,\r\n                        paddingLeft: 30,\r\n                    }}\r\n                >\r\n                    <p\r\n                        style={{\r\n                            color: 'white',\r\n                            fontSize: 16,\r\n                            fontWeight: 'bold',\r\n                        }}\r\n                    >\r\n                        List Lagu yang Sekarang :\r\n                    </p>\r\n                </div>\r\n\r\n                {dataAlbum.albumSong !== undefined &&\r\n                dataAlbum.albumSong.length >= 0 ? (\r\n                    dataAlbum.albumSong.map((item, index) => {\r\n                        return (\r\n                            <Fragment>\r\n                                <div\r\n                                    style={{\r\n                                        // background: 'yellow',\r\n                                        marginBottom: 10,\r\n                                        padding: 5,\r\n                                        paddingLeft: 30,\r\n                                    }}\r\n                                    key={index}\r\n                                >\r\n                                    {item.title}\r\n                                </div>\r\n                            </Fragment>\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <Empty style={{ marginTop: 20 }} />\r\n                )}\r\n\r\n                <div\r\n                    style={{\r\n                        background: 'grey',\r\n                        padding: 5,\r\n                        paddingLeft: 30,\r\n                        marginTop: 50,\r\n                    }}\r\n                >\r\n                    <p\r\n                        style={{\r\n                            color: 'white',\r\n                            fontSize: 16,\r\n                            fontWeight: 'bold',\r\n                        }}\r\n                    >\r\n                        Daftar List Lagu\r\n                    </p>\r\n                </div>\r\n                {dataMusik.map((item, index) => {\r\n                    return (\r\n                        <Fragment>\r\n                            <div\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        addSong: item.title,\r\n                                        idSong: item._id,\r\n                                    });\r\n                                }}\r\n                                style={{\r\n                                    // background: 'yellow',\r\n                                    marginBottom: 10,\r\n                                    padding: 5,\r\n                                    paddingLeft: 30,\r\n                                }}\r\n                                key={index}\r\n                            >\r\n                                {item.title}\r\n                            </div>\r\n                        </Fragment>\r\n                    );\r\n                })}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlbumPageDetail;\r\n","import React, { Component, Fragment } from 'react';\r\nimport './HomePage.css';\r\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport ArtisPage from '../ArtisPage';\r\nimport ArtisPageDetail from '../ArtisPageDetail';\r\nimport AdmobPage from '../AdmobPage';\r\nimport AlbumPageDetail from '../AlbumPageDetail';\r\nimport Axios from 'axios';\r\nimport { BrowserRouter as Router, useHistory } from 'react-router-dom';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport class HomePage extends Component {\r\n    state = {\r\n        collapsed: false,\r\n        data: [],\r\n    };\r\n\r\n    onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        Axios.get('/api/artist')\r\n            .then(res => {\r\n                // console.log('dataHome', res.data);\r\n                this.setState({\r\n                    data: res.data,\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n    render() {\r\n        const { data } = this.state;\r\n        return (\r\n            <Router history={useHistory}>\r\n                <Layout style={{ minHeight: '100vh' }}>\r\n                    <Sider\r\n                        collapsible\r\n                        collapsed={this.state.collapsed}\r\n                        onCollapse={this.onCollapse}\r\n                    >\r\n                        <div className=\"logo\" />\r\n                        <Menu\r\n                            theme=\"dark\"\r\n                            defaultSelectedKeys={['1']}\r\n                            mode=\"inline\"\r\n                        >\r\n                            <Menu.Item key=\"-1\">\r\n                                <Link to=\"/\">\r\n                                    <Icon type=\"android\" />\r\n                                    <span>Admob</span>\r\n                                </Link>\r\n                            </Menu.Item>\r\n\r\n                            <SubMenu\r\n                                key=\"-2\"\r\n                                title={\r\n                                    <span>\r\n                                        <Link to=\"/music\">\r\n                                            <Icon type=\"user\" />\r\n                                            <span>Artist</span>\r\n                                        </Link>\r\n                                    </span>\r\n                                }\r\n                            >\r\n                                {data.map((item, index) => {\r\n                                    return (\r\n                                        <Menu.Item key={index}>\r\n                                            <Link\r\n                                                to={`/artis_detail/${item._id}`}\r\n                                            >\r\n                                                <Icon type=\"bug\" />\r\n                                                <span>{item.name}</span>\r\n                                            </Link>\r\n                                        </Menu.Item>\r\n                                    );\r\n                                })}\r\n                            </SubMenu>\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Layout>\r\n                        <Header style={{ background: '#fff', padding: 0 }}>\r\n                            <div\r\n                                style={{\r\n                                    marginLeft: 20,\r\n                                    textAlign: 'center',\r\n\r\n                                    fontSize: 20,\r\n                                }}\r\n                            >\r\n                                <h1>ADMIN PAGE of MUSIC APP</h1>\r\n                            </div>\r\n                        </Header>\r\n                        <Content style={{ margin: '0 16px' }}>\r\n                            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                                {/* <Breadcrumb.Item>Admob</Breadcrumb.Item> */}\r\n                            </Breadcrumb>\r\n                            <div\r\n                                style={{\r\n                                    padding: 24,\r\n                                    background: '#fff',\r\n                                    minHeight: 360,\r\n                                }}\r\n                            >\r\n                                <Switch>\r\n                                    <Route path=\"/\" exact>\r\n                                        <AdmobPage />\r\n                                    </Route>\r\n\r\n                                    <Route path=\"/music\" component={ArtisPage}>\r\n                                        {/* <ArtisPage /> */}\r\n                                    </Route>\r\n                                    <Route\r\n                                        path=\"/artis_detail/:_id\"\r\n                                        component={ArtisPageDetail}\r\n                                    ></Route>\r\n                                    <Route\r\n                                        path=\"/album_detail/:_id/:_album\"\r\n                                        component={AlbumPageDetail}\r\n                                    >\r\n                                        {/* <AlbumPageDetail /> */}\r\n                                    </Route>\r\n                                </Switch>\r\n                            </div>\r\n                        </Content>\r\n                        <Footer style={{ textAlign: 'center' }}>\r\n                            Admin Page Music App ©2020 Created by Robert\r\n                            Yulisman\r\n                        </Footer>\r\n                    </Layout>\r\n                </Layout>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport HomePage from './Pages/HomePage/HomePage';\n\nfunction App() {\n    return <HomePage />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}